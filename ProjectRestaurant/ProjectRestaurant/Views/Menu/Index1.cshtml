
@model List<ProductTypeViewModel>
@{
    ViewData["Title"] = "Index";
}

<style>
    body {
        background-image: url('/image/cafebackground.jpg');
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-size: cover;
        font-family: Arial;
    }
    * {
        box-sizing: border-box;
    }

    .more {
        display: none
    }


    /* Center website */
    .main {
        max-width: 1000px;
        padding: 10px 20px 10px 20px;
        margin: auto;
        background-color: rgba(0, 0, 0, 0.8);
        border-radius: 25px;
    }

    h1 {
        font-size: 50px;
        color:white;
        word-break: break-all;
    }

    .row {
        margin: 10px -16px;
    }

    /* Add padding BETWEEN each column */


    /* Create three equal columns that floats next to each other */
    .column {
        margin-top:10px;
        margin-left: auto;
        margin-right: auto;
        display: none;
        text-align: center;
        color:white;    
    }

    /* Clear floats after rows */
    .row:after {
        content: "";
        display: table;
        clear: both;
    }

    /* Content */
    .content {
        background-color: white;
        padding: 10px;
    }

    /* The "show" class is added to the filtered elements */
    .show {
        display: block;
    }

    /* Style the buttons */
    .filterButton {
        border: none;
        outline: none;
        padding: 12px 16px;
        background-color: white;
        cursor: pointer;
    }

        .filterButton:hover {
            background-color: #ddd;
        }

         .active {
            background-color: #666;
            color: white;
        }

    input[type=text]{
        background-color:rgba(0, 0, 0, 0.8);
        color:white;
        border:5px solid solid;
        border-color:white;
        border-radius:2px;
        transition:0.3s;
    }
    input[type=text]:focus{
        box-shadow:0 5px 10px 0 rgba(255, 255, 255, 0.8);
    }
    select {
        background-color: rgba(0, 0, 0, 0.8);
        color: white;
    }
    #modalTitle {
        margin:auto;
        font-style: italic;
        color: white;
        font-size: 30px;
    }
    .modal-content {
        background-color: rgba(0, 0, 0, 1);
        color: white;        
        text-align:center;
    }
    
</style>
<body>

    <!-- MAIN (Center website) -->
    <div class="main">

        <h1 style="font-style:oblique">Restorant Menü</h1>
        <hr>



        <div id="myBtnContainer">
            <button class="btn active filterButton" onclick="filterSelection('all')">Tüm Menü</button>
            @*
                <button class="btn" onclick="filterSelection('yemek')">Ana Yemekler</button>
                <button class="btn" onclick="filterSelection('burger')">Burgerler</button>
                <button class="btn" onclick="filterSelection('makarna')">Makarnalar</button>
                <button class="btn" onclick="filterSelection('salata')">Salatalar</button>
                <button class="btn" onclick="filterSelection('tatli')">Tatlılar</button>
                <button class="btn" onclick="filterSelection('icecek')">İçecekler</button>*@
            @foreach (var item in Model)
            {
                <button class="btn filterButton" onclick="filterSelection('@item.Type')">@item.Type</button>
            }
            <button id="addMenuContent" data-toggle="modal" data-target="#modalTarget" class="btn filterButton" onclick="filterSelection('people')">İçerik Ekle</button>


        </div>

        <!-- Portfolio Gallery Grid -->
        <div class="">
            @foreach (var item in Model)
            {

                @if (item.Menu.Count > 0)
                {
                    
            <div class="column @item.Type ">
                <h3>@item.Type</h3>
                <table class="table table-dark table-hover">
                    @foreach (var item2 in item.Menu)
                    {
                        <tbody >
                            <tr >
                                <td style="width:30%;vertical-align:middle">@item2.ProductName</td>
                                <td style="width:30%;vertical-align:middle">
                                    <span data-toggle="modal" data-target="#modalTarget" class="less">
                                        @if (@item2.Description.Length < 11)
                                        {
                                            @item2.Description
                                        }
                                        else
                                        {
                                            @item2.Description.Substring(0, 10)
                                        }

                                    </span><span class="dots">...</span>
                                    <span class="more">@item2.Description</span>
                                </td>
                                <td style="width:30%;vertical-align:middle">@item2.Price ₺</td>
                                <td style="width:5%;vertical-align:middle"> <input id="menuContentUpdate-@item2.MenuId" type="button" class="btn btn-outline-light" value="Güncelle" data-toggle="modal" data-target="#modalTarget" /></td>
                                <td style="width:5%;vertical-align:middle"><input id="menuContentDelete-@item2.MenuId" type="button" class="btn btn-outline-light" value="Sil" data-toggle="modal" data-target="#modalTarget" /></td>

                            </tr>
                        </tbody>
                    }
                </table>
            </div>
                }
            }
            @*@foreach (var menu in Model)
                {
                    @if (menu.ProductTypeId == 1)
                    {<div class="column yemek">
                            <div class="content">
                                <img src="~/img/resim-165758XG.jpg" alt="anayemekler" style="width:100%" />
                                <h4>  @Html.ActionLink(menu.Type, "GetProduct", new { id = menu.ProductTypeId }, new { @class = "btn btn-outline-primary" })</h4>

                            </div>
                        </div>

                    }

                    @if (menu.ProductTypeId == 2)
                    {
                        <div class="column burger">
                            <div class="content">

                                <img src="~/img/burger.jpg" alt="burgerler" style="width:100%" />
                                <h4>@Html.ActionLink(menu.Type, "GetProduct", new { id = menu.ProductTypeId }, new { @class = "btn btn-outline-primary" })</h4>


                            </div>
                        </div>



                    }

                    @if (menu.ProductTypeId == 3)
                    {
                        <div class="column makarna">
                            <div class="content">

                                <img src="~/img/renkli_spagetti-9f1db2fd-ff93-4849-8d04-ed61a6e7b834.jpg" alt="Makarnalar" style="width:92%" />
                                @Html.ActionLink(menu.Type, "GetProduct", new { id = menu.ProductTypeId }, new { @class = "btn btn-outline-primary " })

                            </div>
                        </div>



                    }
                    @if (menu.ProductTypeId == 1002)
                    {
                        <div class="column salata">
                            <div class="content">
                                <img src="~/img/salad.jpg" alt="salatalar" style="width:80%" />

                                @Html.ActionLink(menu.Type, "GetProduct", new { id = menu.ProductTypeId }, new { @class = "btn btn-outline-primary " })

                            </div>
                        </div>



                    }
                    @if (menu.ProductTypeId == 1003)
                    {
                        <div class="column tatli">
                            <div class="content">

                                <img src="~/img/tatlı.jpg" alt="tatlılar" style="width:80%" />
                                @Html.ActionLink(menu.Type, "GetProduct", new { id = menu.ProductTypeId }, new { @class = "btn btn-outline-primary " })

                            </div>
                        </div>



                    }
                    @if (menu.ProductTypeId == 1004)
                    {
                        <div class="column icecek">
                            <div class="content">
                                <img src="~/img/coofee.jpg" alt="icecekler" style="width:100%" />

                                @Html.ActionLink(menu.Type, "GetProduct", new { id = menu.ProductTypeId }, new { @class = "btn btn-outline-primary " })

                            </div>
                        </div>



                    }
                }*@

        </div>

        <!-- END MAIN -->
    </div>


    <script>
        filterSelection("all")
        function filterSelection(c) {
            var x, i;
            x = document.getElementsByClassName("column");
            if (c == "all") c = "";
            for (i = 0; i < x.length; i++) {
                w3RemoveClass(x[i], "show");
                if (x[i].className.indexOf(c) > -1) w3AddClass(x[i], "show");
            }
        }

        function w3AddClass(element, name) {
            var i, arr1, arr2;
            arr1 = element.className.split(" ");
            arr2 = name.split(" ");
            for (i = 0; i < arr2.length; i++) {
                if (arr1.indexOf(arr2[i]) == -1) { element.className += " " + arr2[i]; }
            }
        }

        function w3RemoveClass(element, name) {
            var i, arr1, arr2;
            arr1 = element.className.split(" ");
            arr2 = name.split(" ");
            for (i = 0; i < arr2.length; i++) {
                while (arr1.indexOf(arr2[i]) > -1) {
                    arr1.splice(arr1.indexOf(arr2[i]), 1);
                }
            }
            element.className = arr1.join(" ");
        }


        // Add active class to the current button (highlight it)
        var btnContainer = document.getElementById("myBtnContainer");
        var btns = btnContainer.getElementsByClassName("btn");
        for (var i = 0; i < btns.length; i++) {
            btns[i].addEventListener("click", function () {
                var current = document.getElementsByClassName("active");
                current[0].className = current[0].className.replace(" active", "");
                this.className += " active";
            });
        }
    </script>
    <script>
        document.body.addEventListener("click", function (event) {
            if (event.target.className == "less") {
                
                document.getElementsByClassName("modal-body")[0].innerHTML = event.target.parentElement.children[2].innerHTML;
                document.getElementsByClassName("modal-title")[0].innerHTML = event.target.parentElement.parentElement.children[0].innerHTML;
            }
        });

    </script>

    <div id="modalTarget" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 id="modalTitle" class="modal-title">Detay</h1>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span style="color:white;" aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div id="modalBody" class="modal-body">

                </div>
                <div class="modal-footer">
                    <button type="button" id="kapat" class="btn btn-outline-light" data-dismiss="modal">Kapat</button>
                </div>
            </div>
        </div>
    </div>

</body>









<script src="~/js/Menu/Index.js"></script>
<script src="~/js/Menu/Add.js"></script>
<script src="~/js/Menu/Update.js"></script>
<script src="~/js/Menu/Delete.js"></script>